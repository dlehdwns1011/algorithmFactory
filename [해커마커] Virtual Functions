#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
    
static int studentID = 1;
static int professorID = 1;
    
class Person {
public:
    string name;
    int age;

    Person() {
        name = "";
        age = 0;
    }

    virtual void getdata() {};
    virtual void putdata() {};
};

class Professor : public Person {
private:
    int publications;
    int cur_id;

public:
    Professor() {
    }

    virtual void getdata() {
        cin >> name >> age >> publications;
        cur_id = professorID++;
    }

    virtual void putdata() {
        cout << name << " " << age << " " << publications << " " << cur_id << endl;
    }
};

class Student : public Person {
private:
    int marks[6];
    int cur_id;

    int sumMarks;

public:
    Student() {
        sumMarks = 0;
    }

    virtual void getdata() {
        cin >> name >> age;
        for (int i = 0; i < 6; ++i) {
            cin >> marks[i];
            sumMarks += marks[i];
        }
        cur_id = studentID++;
    }

    virtual void putdata() {
        cout << name << " " << age << " " << sumMarks << " " << cur_id << endl;
    }
};

int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
